/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 

/*    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };*/

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Y &kp C &kp L &kp SEMI &kp K                           &kp W &kp F  &kp U    &mt COMMA PERIOD   &kp BKSP 
		&kp I &kp S &kp R &kp T &kp G 			        	        &kp P &kp N &kp E &kp Q &kp O
		&mt LSFT A &kp V &kp Z &kp D &kp J				        &kp B &kp H  &mt N8 LS(PERIOD) &mt SLASH LS(COMMA) &kp X
          				&sk LCTRL &kp SPC  				&to 1 &sk LSHIFT
		>;
		};

       		left_layer {
		bindings = <
		&kp ESC  &kp RA(NUM_0)    &kp RA(NUM_3)    &kp DOLLAR    &kp LS(SQT)		&kp LBKT &kp NUM_1 &kp NON_US_HASH &mt NUM_6 M &kp BKSP 
		&kp TAB    &kp EQUAL    &kp LS(EQUAL)      &kp LS(COMMA)     &kp NUM_4 		&kp RA(NUM_8) &kp RA(NUM_4) &kp RA(EQUAL) &kp RA(NUM_6)  &kp ENTER 
		&kp RA(NUM_2)    &kp RA(E) 	&kp NON_US_BSLH &kp LS(NON_US_BSLH)  &kp NUM_3 	&kp RA(NUM_5) &kp NUM_5 &kp MINUS &kp RA(MINUS)  &to 3
					    &kp LCTRL   &to 0   				&to 2	&kp RGUI  
		>;
		};
		
		right_layer {
		bindings = <
		&kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT  &kp AMPS &kp KMLT &kp LPRN &kp RPRN 
		&kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BKSP
		&kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
					  &kp LCTL   &to 0  				&kp SPC  &mo 2 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &sl 0 &trans  					&trans &trans 
		>;
		};	
        
	};
};
